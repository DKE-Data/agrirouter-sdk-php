<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messaging/response/payload/feed/feed-response.proto

namespace Agrirouter\Feed\Response\HeaderQueryResponse;

use Agrirouter\Feed\Response\HeaderQueryResponse_Feed;
use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;
use GPBMetadata\Messaging\Response\Payload\Feed\FeedResponse;

/**
 * Generated from protobuf message <code>agrirouter.feed.response.HeaderQueryResponse.Feed</code>
 */
class Feed extends Message
{
    /**
     * Sender for the group of messages
     *
     * Generated from protobuf field <code>string sender_id = 1;</code>
     */
    protected $sender_id = '';
    /**
     * Receiver for the group of messages
     *
     * Generated from protobuf field <code>string receiver_id = 2;</code>
     */
    protected $receiver_id = '';
    /**
     * Message header information for messages of the sender_id in combination with receiver_id based on the queried request
     *
     * Generated from protobuf field <code>repeated .agrirouter.feed.response.HeaderQueryResponse.Header headers = 3;</code>
     */
    private $headers;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sender_id
     *           Sender for the group of messages
     *     @type string $receiver_id
     *           Receiver for the group of messages
     *     @type Header[]|RepeatedField $headers
     *           Message header information for messages of the sender_id in combination with receiver_id based on the queried request
     * }
     */
    public function __construct($data = NULL) {
        FeedResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * Sender for the group of messages
     *
     * Generated from protobuf field <code>string sender_id = 1;</code>
     * @return string
     */
    public function getSenderId()
    {
        return $this->sender_id;
    }

    /**
     * Sender for the group of messages
     *
     * Generated from protobuf field <code>string sender_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSenderId($var)
    {
        GPBUtil::checkString($var, True);
        $this->sender_id = $var;

        return $this;
    }

    /**
     * Receiver for the group of messages
     *
     * Generated from protobuf field <code>string receiver_id = 2;</code>
     * @return string
     */
    public function getReceiverId()
    {
        return $this->receiver_id;
    }

    /**
     * Receiver for the group of messages
     *
     * Generated from protobuf field <code>string receiver_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setReceiverId($var)
    {
        GPBUtil::checkString($var, True);
        $this->receiver_id = $var;

        return $this;
    }

    /**
     * Message header information for messages of the sender_id in combination with receiver_id based on the queried request
     *
     * Generated from protobuf field <code>repeated .agrirouter.feed.response.HeaderQueryResponse.Header headers = 3;</code>
     * @return RepeatedField
     */
    public function getHeaders()
    {
        return $this->headers;
    }

    /**
     * Message header information for messages of the sender_id in combination with receiver_id based on the queried request
     *
     * Generated from protobuf field <code>repeated .agrirouter.feed.response.HeaderQueryResponse.Header headers = 3;</code>
     * @param Header[]|RepeatedField $var
     * @return $this
     */
    public function setHeaders($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::MESSAGE, Header::class);
        $this->headers = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Feed::class, HeaderQueryResponse_Feed::class);

