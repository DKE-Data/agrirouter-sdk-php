<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messaging/request/request.proto

namespace Agrirouter\Request;

use Agrirouter\Commons\ChunkComponent;
use Agrirouter\Commons\Metadata;
use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Timestamp;
use GPBMetadata\Messaging\Request\Request;

/**
 * Generated from protobuf message <code>agrirouter.request.RequestEnvelope</code>
 */
class RequestEnvelope extends Message
{
    /**
     * Client generated Message ID it would use to uniquly identify the message it is sending
     *
     * Generated from protobuf field <code>string application_message_id = 1;</code>
     */
    protected $application_message_id = '';
    /**
     * Sequence Number from the client indicating the order in which it has sent messages
     *
     * Generated from protobuf field <code>int64 application_message_seq_no = 2;</code>
     */
    protected $application_message_seq_no = 0;
    /**
     * agrirouter technical message type
     *
     * Generated from protobuf field <code>string technical_message_type = 3;</code>
     */
    protected $technical_message_type = '';
    /**
     * If this message is in reference to a team-set context the ID would be placed here
     *
     * Generated from protobuf field <code>string team_set_context_id = 4;</code>
     */
    protected $team_set_context_id = '';
    /**
     * The sending mode so the agrirouter can properly process the message.     
     *
     * Generated from protobuf field <code>.agrirouter.request.RequestEnvelope.Mode mode = 5;</code>
     */
    protected $mode = 0;
    /**
     * Directly Addressed agrirouter Endpoint ID's
     *
     * Generated from protobuf field <code>repeated string recipients = 6;</code>
     */
    private $recipients;
    /**
     * If this is part of a chunked message details are here
     *
     * Generated from protobuf field <code>.agrirouter.commons.ChunkComponent chunk_info = 7;</code>
     */
    protected $chunk_info = null;
    /**
     * Client generated UTC Timestamp at which the client sent the message
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 8;</code>
     */
    protected $timestamp = null;
    /**
     * Additional metadata information to help differentiate between messages of the same type
     *
     * Generated from protobuf field <code>.agrirouter.commons.Metadata metadata = 9;</code>
     */
    protected $metadata = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $application_message_id
     *           Client generated Message ID it would use to uniquly identify the message it is sending
     *     @type int|string $application_message_seq_no
     *           Sequence Number from the client indicating the order in which it has sent messages
     *     @type string $technical_message_type
     *           agrirouter technical message type
     *     @type string $team_set_context_id
     *           If this message is in reference to a team-set context the ID would be placed here
     *     @type int $mode
     *           The sending mode so the agrirouter can properly process the message.     
     *     @type string[]|RepeatedField $recipients
     *           Directly Addressed agrirouter Endpoint ID's
     *     @type ChunkComponent $chunk_info
     *           If this is part of a chunked message details are here
     *     @type Timestamp $timestamp
     *           Client generated UTC Timestamp at which the client sent the message
     *     @type Metadata $metadata
     *           Additional metadata information to help differentiate between messages of the same type
     * }
     */
    public function __construct($data = NULL) {
        Request::initOnce();
        parent::__construct($data);
    }

    /**
     * Client generated Message ID it would use to uniquly identify the message it is sending
     *
     * Generated from protobuf field <code>string application_message_id = 1;</code>
     * @return string
     */
    public function getApplicationMessageId()
    {
        return $this->application_message_id;
    }

    /**
     * Client generated Message ID it would use to uniquly identify the message it is sending
     *
     * Generated from protobuf field <code>string application_message_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setApplicationMessageId($var)
    {
        GPBUtil::checkString($var, True);
        $this->application_message_id = $var;

        return $this;
    }

    /**
     * Sequence Number from the client indicating the order in which it has sent messages
     *
     * Generated from protobuf field <code>int64 application_message_seq_no = 2;</code>
     * @return int|string
     */
    public function getApplicationMessageSeqNo()
    {
        return $this->application_message_seq_no;
    }

    /**
     * Sequence Number from the client indicating the order in which it has sent messages
     *
     * Generated from protobuf field <code>int64 application_message_seq_no = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setApplicationMessageSeqNo($var)
    {
        GPBUtil::checkInt64($var);
        $this->application_message_seq_no = $var;

        return $this;
    }

    /**
     * agrirouter technical message type
     *
     * Generated from protobuf field <code>string technical_message_type = 3;</code>
     * @return string
     */
    public function getTechnicalMessageType()
    {
        return $this->technical_message_type;
    }

    /**
     * agrirouter technical message type
     *
     * Generated from protobuf field <code>string technical_message_type = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTechnicalMessageType($var)
    {
        GPBUtil::checkString($var, True);
        $this->technical_message_type = $var;

        return $this;
    }

    /**
     * If this message is in reference to a team-set context the ID would be placed here
     *
     * Generated from protobuf field <code>string team_set_context_id = 4;</code>
     * @return string
     */
    public function getTeamSetContextId()
    {
        return $this->team_set_context_id;
    }

    /**
     * If this message is in reference to a team-set context the ID would be placed here
     *
     * Generated from protobuf field <code>string team_set_context_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setTeamSetContextId($var)
    {
        GPBUtil::checkString($var, True);
        $this->team_set_context_id = $var;

        return $this;
    }

    /**
     * The sending mode so the agrirouter can properly process the message.     
     *
     * Generated from protobuf field <code>.agrirouter.request.RequestEnvelope.Mode mode = 5;</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * The sending mode so the agrirouter can properly process the message.     
     *
     * Generated from protobuf field <code>.agrirouter.request.RequestEnvelope.Mode mode = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, RequestEnvelope_Mode::class);
        $this->mode = $var;

        return $this;
    }

    /**
     * Directly Addressed agrirouter Endpoint ID's
     *
     * Generated from protobuf field <code>repeated string recipients = 6;</code>
     * @return RepeatedField
     */
    public function getRecipients()
    {
        return $this->recipients;
    }

    /**
     * Directly Addressed agrirouter Endpoint ID's
     *
     * Generated from protobuf field <code>repeated string recipients = 6;</code>
     * @param string[]|RepeatedField $var
     * @return $this
     */
    public function setRecipients($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::STRING);
        $this->recipients = $arr;

        return $this;
    }

    /**
     * If this is part of a chunked message details are here
     *
     * Generated from protobuf field <code>.agrirouter.commons.ChunkComponent chunk_info = 7;</code>
     * @return ChunkComponent
     */
    public function getChunkInfo()
    {
        return $this->chunk_info;
    }

    /**
     * If this is part of a chunked message details are here
     *
     * Generated from protobuf field <code>.agrirouter.commons.ChunkComponent chunk_info = 7;</code>
     * @param ChunkComponent $var
     * @return $this
     */
    public function setChunkInfo($var)
    {
        GPBUtil::checkMessage($var, ChunkComponent::class);
        $this->chunk_info = $var;

        return $this;
    }

    /**
     * Client generated UTC Timestamp at which the client sent the message
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 8;</code>
     * @return Timestamp
     */
    public function getTimestamp()
    {
        return $this->timestamp;
    }

    /**
     * Client generated UTC Timestamp at which the client sent the message
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp timestamp = 8;</code>
     * @param Timestamp $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkMessage($var, Timestamp::class);
        $this->timestamp = $var;

        return $this;
    }

    /**
     * Additional metadata information to help differentiate between messages of the same type
     *
     * Generated from protobuf field <code>.agrirouter.commons.Metadata metadata = 9;</code>
     * @return Metadata
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Additional metadata information to help differentiate between messages of the same type
     *
     * Generated from protobuf field <code>.agrirouter.commons.Metadata metadata = 9;</code>
     * @param Metadata $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkMessage($var, Metadata::class);
        $this->metadata = $var;

        return $this;
    }

}

