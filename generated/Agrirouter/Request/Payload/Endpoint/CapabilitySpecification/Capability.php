<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messaging/request/payload/endpoint/capabilities.proto

namespace Agrirouter\Request\Payload\Endpoint\CapabilitySpecification;

use Agrirouter\Request\Payload\Endpoint\CapabilitySpecification_Capability;
use Agrirouter\Request\Payload\Endpoint\CapabilitySpecification_Direction;
use Google\Protobuf\Internal\GPBUtil;
use Google\Protobuf\Internal\Message;
use GPBMetadata\Messaging\Request\Payload\Endpoint\Capabilities;

/**
 * Generated from protobuf message <code>agrirouter.request.payload.endpoint.CapabilitySpecification.Capability</code>
 */
class Capability extends Message
{
    /**
     * Technical Message type from agrirouter
     *
     * Generated from protobuf field <code>string technical_message_type = 1;</code>
     */
    protected $technical_message_type = '';
    /**
     * Specifies which way the messages are to flow for the capability
     *
     * Generated from protobuf field <code>.agrirouter.request.payload.endpoint.CapabilitySpecification.Direction direction = 2;</code>
     */
    protected $direction = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $technical_message_type
     *           Technical Message type from agrirouter
     *     @type int $direction
     *           Specifies which way the messages are to flow for the capability
     * }
     */
    public function __construct($data = NULL) {
        Capabilities::initOnce();
        parent::__construct($data);
    }

    /**
     * Technical Message type from agrirouter
     *
     * Generated from protobuf field <code>string technical_message_type = 1;</code>
     * @return string
     */
    public function getTechnicalMessageType()
    {
        return $this->technical_message_type;
    }

    /**
     * Technical Message type from agrirouter
     *
     * Generated from protobuf field <code>string technical_message_type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTechnicalMessageType($var)
    {
        GPBUtil::checkString($var, True);
        $this->technical_message_type = $var;

        return $this;
    }

    /**
     * Specifies which way the messages are to flow for the capability
     *
     * Generated from protobuf field <code>.agrirouter.request.payload.endpoint.CapabilitySpecification.Direction direction = 2;</code>
     * @return int
     */
    public function getDirection()
    {
        return $this->direction;
    }

    /**
     * Specifies which way the messages are to flow for the capability
     *
     * Generated from protobuf field <code>.agrirouter.request.payload.endpoint.CapabilitySpecification.Direction direction = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDirection($var)
    {
        GPBUtil::checkEnum($var, CapabilitySpecification_Direction::class);
        $this->direction = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Capability::class, CapabilitySpecification_Capability::class);

